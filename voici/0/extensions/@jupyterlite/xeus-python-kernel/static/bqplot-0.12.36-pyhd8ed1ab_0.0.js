
  var Module = typeof globalThis.Module !== 'undefined' ? globalThis.Module : {};

  if (!Module.expectedDataFileDownloads) {
    Module.expectedDataFileDownloads = 0;
  }

  Module.expectedDataFileDownloads++;
  (function() {
    // When running as a pthread, FS operations are proxied to the main thread, so we don't need to
    // fetch the .data bundle on the worker
    if (Module['ENVIRONMENT_IS_PTHREAD']) return;
    var loadPackage = function(metadata) {

      var PACKAGE_PATH = '';
      if (typeof window === 'object') {
        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {
        // web worker
        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
      }
      var PACKAGE_NAME = 'bqplot-0.12.36-pyhd8ed1ab_0.0.data';
      var REMOTE_PACKAGE_BASE = 'bqplot-0.12.36-pyhd8ed1ab_0.0.data';
      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {
        Module['locateFile'] = Module['locateFilePackage'];
        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');
      }
      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;
var REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];

      function fetchRemotePackage(packageName, packageSize, callback, errback) {
        
        var xhr = new XMLHttpRequest();
        xhr.open('GET', packageName, true);
        xhr.responseType = 'arraybuffer';
        xhr.onprogress = function(event) {
          var url = packageName;
          var size = packageSize;
          if (event.total) size = event.total;
          if (event.loaded) {
            if (!xhr.addedTotal) {
              xhr.addedTotal = true;
              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
              Module.dataFileDownloads[url] = {
                loaded: event.loaded,
                total: size
              };
            } else {
              Module.dataFileDownloads[url].loaded = event.loaded;
            }
            var total = 0;
            var loaded = 0;
            var num = 0;
            for (var download in Module.dataFileDownloads) {
            var data = Module.dataFileDownloads[download];
              total += data.total;
              loaded += data.loaded;
              num++;
            }
            total = Math.ceil(total * Module.expectedDataFileDownloads/num);
            if (Module['empackSetStatus']) Module['empackSetStatus']('Downloading',PACKAGE_NAME,loaded,total);
            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
          } else if (!Module.dataFileDownloads) {
            if (Module['setStatus']) Module['setStatus']('Downloading data...');
          }
        };
        xhr.onerror = function(event) {
          throw new Error("NetworkError for: " + packageName);
        }
        xhr.onload = function(event) {
          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            var packageData = xhr.response;
            callback(packageData);
          } else {
            throw new Error(xhr.statusText + " : " + xhr.responseURL);
          }
        };
        xhr.send(null);
      };

      function handleError(error) {
        console.error('package error:', error);
      };

      var fetchedCallback = null;
      var fetched = Module['getPreloadedPackage'] ? Module['getPreloadedPackage'](REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE) : null;

      if (!fetched) fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);

    function runWithFS() {

      function assert(check, msg) {
        if (!check) throw msg + new Error().stack;
      }
Module['FS_createPath']("/", "tmp", true, true);
Module['FS_createPath']("/tmp", "xeus-python-kernel", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel", "envs", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs", "voici", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/voici", "conda-meta", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/voici", "lib", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/voici/lib", "python3.10", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/voici/lib/python3.10", "site-packages", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages", "bqplot-0.12.36.dist-info", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages", "bqplot", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot", "map_data", true, true);

      function processPackageData(arrayBuffer) {
        assert(arrayBuffer, 'Loading data file failed.');
        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');
        var byteArray = new Uint8Array(arrayBuffer);
        var curr;
        var compressedData = {"data":null,"cachedOffset":1170660,"cachedIndexes":[-1,-1],"cachedChunks":[null,null],"offsets":[0,1452,2868,4132,5271,6533,7902,9209,10637,11796,12792,13810,14961,16374,17675,18823,19940,21058,22123,23398,24585,25652,26881,28201,29241,30184,31088,31976,32968,33986,34954,35865,36684,37551,38437,39380,40159,41109,42016,42933,43839,44699,45604,46494,47350,48211,49067,49928,50826,51760,52652,53473,54351,55275,56266,57156,58063,58963,59869,60717,61623,62517,63361,64229,65278,66187,67107,67986,68888,69801,70703,71570,72423,73311,74243,75211,76181,76986,77852,78719,79584,80591,81465,82313,83184,84128,84996,85821,86706,87658,88523,89463,90384,91332,92198,93057,93977,94851,95680,96506,97333,98156,99054,99961,100912,101846,102684,103524,104367,105301,106110,106908,107793,108658,109507,110476,111323,112202,113081,113986,114878,115734,116599,117421,118370,119210,120145,121066,121963,122914,123884,124836,125697,126625,127612,128535,129501,130492,131474,132423,133361,134296,135214,136169,137087,137969,138984,139958,140766,141684,142591,143479,144405,145343,146273,147190,148092,149003,149939,150848,151749,152698,153612,154548,155465,156337,157311,158319,159316,160202,161153,162053,163004,163971,164923,165924,166882,167805,168737,169618,170537,171359,172346,173231,174168,175133,176033,177000,177985,178991,180066,181102,182124,183124,184139,185115,186060,187115,188206,189126,190049,191023,191950,192918,193809,194745,195688,196653,197625,198592,199542,200531,201424,202313,203260,204227,205233,206184,207113,208017,208945,209877,210846,211781,212689,213585,214485,215431,216277,217265,218113,218957,219780,220595,221484,222350,223237,224075,224913,225739,226606,227447,228306,229170,230116,231001,231895,232794,233665,234592,235556,236498,237534,238498,239483,240501,241494,242434,243297,244202,245103,246035,246883,247829,248761,249667,250573,251547,252491,253465,254423,255384,256276,257186,258151,259100,260060,261048,262048,263034,264058,265099,266182,267117,268024,268919,269753,270561,271497,272382,273308,274225,275103,275972,276822,277758,278722,279597,280439,281241,282077,282929,283776,284638,285599,286491,287386,288288,289116,290032,291344,292748,294167,295684,297194,298670,300234,301771,303286,304806,306311,307800,309370,311018,312104,313318,314088,314945,315789,316634,317470,318318,319136,319986,320838,321679,322513,323370,324201,325015,325836,326693,327480,328312,329125,329998,330814,331634,332510,333330,334169,335024,335801,336622,337495,338300,339135,339956,340737,341575,342379,343196,343983,344841,345625,346474,347305,348110,348930,349756,350626,351419,352228,353089,353938,354765,355598,356427,357284,358151,358914,359733,360563,361386,362236,363036,363896,364699,365540,366355,367204,368013,368836,369678,370512,371352,372195,373004,373867,374687,375568,376361,377209,378042,378846,379687,380562,381473,382291,383142,383982,384845,385726,386575,387396,388231,389093,389927,390763,391618,392461,393338,394144,394981,395820,396667,397513,398342,399172,400000,400824,401652,402505,403376,404179,405029,405850,406678,407529,408365,409185,410048,410901,411780,412579,413444,414311,415142,415946,416768,417608,418458,419294,420144,421007,421884,422725,423608,424440,425285,426110,426956,427807,428621,429468,430282,431119,431966,432809,433633,434463,435301,436186,437032,437863,438685,439525,440343,441169,441989,442864,443675,444472,445301,446118,446939,447747,448539,449431,450290,451109,451925,452765,453606,454408,455227,456051,456898,457692,458575,459403,460253,461117,461987,462811,463664,464555,465410,466327,467241,468143,469011,469889,470815,471720,472588,473411,474276,475226,476146,476884,477652,478395,479173,480187,481599,482976,484363,485808,487230,488631,490068,491469,492893,494256,495685,497116,498553,499985,501407,502826,504233,505646,507040,508505,509896,511322,512744,514160,515584,517010,518398,519745,521109,522540,523949,525270,526691,528134,529538,530849,532286,533626,534981,536404,537739,539181,540593,541971,543327,544649,546013,547356,548683,550058,551466,552820,554160,555502,556840,558224,559587,560942,562340,563739,565153,566501,567906,569300,570662,572025,573405,574732,576126,577474,578889,580229,581549,582939,584316,585710,587041,588414,589820,591222,592604,594001,595351,596780,598201,599588,601000,602378,603739,605125,606536,607941,609332,610718,612149,613532,614903,616285,617725,619115,620515,621867,623243,624642,626045,627466,628850,630238,631649,633039,634489,635906,637302,638733,640117,641494,642889,644265,645718,647067,648439,649797,651190,652588,653979,655353,656733,658117,659516,660914,662274,663598,664978,666379,667795,669211,670596,671968,673347,674709,676081,677447,678851,680228,681592,683004,684426,685813,687180,688588,689955,691342,692734,694144,695571,696968,698323,699733,701135,702546,703960,705295,706643,708022,709395,710693,712100,713500,714868,716244,717628,718982,720329,721734,723112,724471,725846,727261,728606,729980,731353,732708,734104,735485,736869,738262,739644,741018,742393,743795,745149,746498,747888,749258,750564,751838,753202,754616,756049,757538,759020,760496,761947,763425,764876,766350,767830,769284,770770,772245,773710,775181,776651,778155,779645,781124,782506,783807,785106,786505,788111,789518,790827,792302,793719,795192,796667,798137,799655,801149,802592,804122,805626,807094,808385,809698,810879,812055,813318,814572,815786,816985,818259,819465,820707,821893,823125,824298,825497,826683,827964,829108,830339,831543,832745,833927,835095,836195,837472,838563,839712,840963,841978,843216,844295,845473,846607,847800,848952,850048,851156,852291,853404,854492,855676,856871,857949,859029,860203,861320,862482,863675,864809,865924,867087,868251,869392,870483,871657,872788,873902,875010,876172,877321,878410,879566,880765,881941,883107,884199,885411,886606,887805,888949,890150,891353,892547,893698,894882,896062,897225,898432,899661,900765,901929,903143,904348,905527,906732,907885,909083,910292,911462,912571,913725,914916,916131,917235,918340,919459,920637,921785,922941,924120,925348,926482,927626,928800,930007,931231,932391,933608,934758,935934,937078,938263,939454,940696,941773,942944,944168,945362,946547,947763,948953,950100,951285,952476,953648,954758,955929,957108,958180,959359,960504,961664,962836,963958,965166,966333,967499,968683,969851,971036,972194,973393,974600,975796,976954,978144,979335,980482,981669,982838,983970,985222,986463,987749,989049,990293,991588,992852,994118,995427,996706,997988,999226,1000487,1001786,1002999,1004074,1005145,1006423,1007484,1008406,1009308,1010117,1010966,1011760,1012577,1013538,1014391,1015303,1016655,1017895,1019145,1020449,1021752,1023043,1024366,1025688,1026991,1028321,1029640,1030965,1032262,1033553,1034845,1036148,1037473,1038817,1040163,1041459,1042741,1044033,1045345,1046693,1047993,1049347,1050679,1051985,1053320,1054619,1055871,1057135,1058449,1059774,1061105,1062396,1063752,1065092,1066425,1067772,1069116,1070430,1071771,1073110,1074488,1075841,1077175,1078501,1079828,1081388,1082741,1084035,1085177,1086331,1087745,1089113,1090361,1091445,1092385,1093292,1094525,1095486,1096642,1097604,1098098,1099129,1100286,1101249,1102264,1103371,1104475,1105681,1106920,1108111,1109297,1110366,1111315,1112684,1114040,1115259,1116376,1117484,1118635,1119872,1121023,1121946,1123008,1123870,1125016,1125667,1126641,1128175,1129593,1130656,1131915,1133119,1134374,1135463,1136632,1137964,1139213,1140514,1141657,1142747,1143829,1144702,1145424,1146115,1146973,1148158,1149006,1149564,1150856,1152133,1153686,1154892,1155972,1156925,1157877,1159097,1160146,1161074,1161997,1163350,1164625,1166046,1167140,1168349,1169630],"sizes":[1452,1416,1264,1139,1262,1369,1307,1428,1159,996,1018,1151,1413,1301,1148,1117,1118,1065,1275,1187,1067,1229,1320,1040,943,904,888,992,1018,968,911,819,867,886,943,779,950,907,917,906,860,905,890,856,861,856,861,898,934,892,821,878,924,991,890,907,900,906,848,906,894,844,868,1049,909,920,879,902,913,902,867,853,888,932,968,970,805,866,867,865,1007,874,848,871,944,868,825,885,952,865,940,921,948,866,859,920,874,829,826,827,823,898,907,951,934,838,840,843,934,809,798,885,865,849,969,847,879,879,905,892,856,865,822,949,840,935,921,897,951,970,952,861,928,987,923,966,991,982,949,938,935,918,955,918,882,1015,974,808,918,907,888,926,938,930,917,902,911,936,909,901,949,914,936,917,872,974,1008,997,886,951,900,951,967,952,1001,958,923,932,881,919,822,987,885,937,965,900,967,985,1006,1075,1036,1022,1000,1015,976,945,1055,1091,920,923,974,927,968,891,936,943,965,972,967,950,989,893,889,947,967,1006,951,929,904,928,932,969,935,908,896,900,946,846,988,848,844,823,815,889,866,887,838,838,826,867,841,859,864,946,885,894,899,871,927,964,942,1036,964,985,1018,993,940,863,905,901,932,848,946,932,906,906,974,944,974,958,961,892,910,965,949,960,988,1000,986,1024,1041,1083,935,907,895,834,808,936,885,926,917,878,869,850,936,964,875,842,802,836,852,847,862,961,892,895,902,828,916,1312,1404,1419,1517,1510,1476,1564,1537,1515,1520,1505,1489,1570,1648,1086,1214,770,857,844,845,836,848,818,850,852,841,834,857,831,814,821,857,787,832,813,873,816,820,876,820,839,855,777,821,873,805,835,821,781,838,804,817,787,858,784,849,831,805,820,826,870,793,809,861,849,827,833,829,857,867,763,819,830,823,850,800,860,803,841,815,849,809,823,842,834,840,843,809,863,820,881,793,848,833,804,841,875,911,818,851,840,863,881,849,821,835,862,834,836,855,843,877,806,837,839,847,846,829,830,828,824,828,853,871,803,850,821,828,851,836,820,863,853,879,799,865,867,831,804,822,840,850,836,850,863,877,841,883,832,845,825,846,851,814,847,814,837,847,843,824,830,838,885,846,831,822,840,818,826,820,875,811,797,829,817,821,808,792,892,859,819,816,840,841,802,819,824,847,794,883,828,850,864,870,824,853,891,855,917,914,902,868,878,926,905,868,823,865,950,920,738,768,743,778,1014,1412,1377,1387,1445,1422,1401,1437,1401,1424,1363,1429,1431,1437,1432,1422,1419,1407,1413,1394,1465,1391,1426,1422,1416,1424,1426,1388,1347,1364,1431,1409,1321,1421,1443,1404,1311,1437,1340,1355,1423,1335,1442,1412,1378,1356,1322,1364,1343,1327,1375,1408,1354,1340,1342,1338,1384,1363,1355,1398,1399,1414,1348,1405,1394,1362,1363,1380,1327,1394,1348,1415,1340,1320,1390,1377,1394,1331,1373,1406,1402,1382,1397,1350,1429,1421,1387,1412,1378,1361,1386,1411,1405,1391,1386,1431,1383,1371,1382,1440,1390,1400,1352,1376,1399,1403,1421,1384,1388,1411,1390,1450,1417,1396,1431,1384,1377,1395,1376,1453,1349,1372,1358,1393,1398,1391,1374,1380,1384,1399,1398,1360,1324,1380,1401,1416,1416,1385,1372,1379,1362,1372,1366,1404,1377,1364,1412,1422,1387,1367,1408,1367,1387,1392,1410,1427,1397,1355,1410,1402,1411,1414,1335,1348,1379,1373,1298,1407,1400,1368,1376,1384,1354,1347,1405,1378,1359,1375,1415,1345,1374,1373,1355,1396,1381,1384,1393,1382,1374,1375,1402,1354,1349,1390,1370,1306,1274,1364,1414,1433,1489,1482,1476,1451,1478,1451,1474,1480,1454,1486,1475,1465,1471,1470,1504,1490,1479,1382,1301,1299,1399,1606,1407,1309,1475,1417,1473,1475,1470,1518,1494,1443,1530,1504,1468,1291,1313,1181,1176,1263,1254,1214,1199,1274,1206,1242,1186,1232,1173,1199,1186,1281,1144,1231,1204,1202,1182,1168,1100,1277,1091,1149,1251,1015,1238,1079,1178,1134,1193,1152,1096,1108,1135,1113,1088,1184,1195,1078,1080,1174,1117,1162,1193,1134,1115,1163,1164,1141,1091,1174,1131,1114,1108,1162,1149,1089,1156,1199,1176,1166,1092,1212,1195,1199,1144,1201,1203,1194,1151,1184,1180,1163,1207,1229,1104,1164,1214,1205,1179,1205,1153,1198,1209,1170,1109,1154,1191,1215,1104,1105,1119,1178,1148,1156,1179,1228,1134,1144,1174,1207,1224,1160,1217,1150,1176,1144,1185,1191,1242,1077,1171,1224,1194,1185,1216,1190,1147,1185,1191,1172,1110,1171,1179,1072,1179,1145,1160,1172,1122,1208,1167,1166,1184,1168,1185,1158,1199,1207,1196,1158,1190,1191,1147,1187,1169,1132,1252,1241,1286,1300,1244,1295,1264,1266,1309,1279,1282,1238,1261,1299,1213,1075,1071,1278,1061,922,902,809,849,794,817,961,853,912,1352,1240,1250,1304,1303,1291,1323,1322,1303,1330,1319,1325,1297,1291,1292,1303,1325,1344,1346,1296,1282,1292,1312,1348,1300,1354,1332,1306,1335,1299,1252,1264,1314,1325,1331,1291,1356,1340,1333,1347,1344,1314,1341,1339,1378,1353,1334,1326,1327,1560,1353,1294,1142,1154,1414,1368,1248,1084,940,907,1233,961,1156,962,494,1031,1157,963,1015,1107,1104,1206,1239,1191,1186,1069,949,1369,1356,1219,1117,1108,1151,1237,1151,923,1062,862,1146,651,974,1534,1418,1063,1259,1204,1255,1089,1169,1332,1249,1301,1143,1090,1082,873,722,691,858,1185,848,558,1292,1277,1553,1206,1080,953,952,1220,1049,928,923,1353,1275,1421,1094,1209,1281,1030],"successes":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}
;
            compressedData['data'] = byteArray;
            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');
            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, true);
            Module['removeRunDependency']('datafile_bqplot-0.12.36-pyhd8ed1ab_0.0.data');
      };
      Module['addRunDependency']('datafile_bqplot-0.12.36-pyhd8ed1ab_0.0.data');

      if (!Module.preloadResults) Module.preloadResults = {};

      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }

    }
    if (Module['calledRun']) {
      runWithFS();
    } else {
      if (!Module['preRun']) Module['preRun'] = [];
      Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
    }

    }
loadPackage({"files": [{"filename": "/tmp/xeus-python-kernel/envs/voici/conda-meta/bqplot-0.12.36-pyhd8ed1ab_0.json", "start": 0, "end": 84}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot-0.12.36.dist-info/direct_url.json", "start": 84, "end": 186}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/__init__.py", "start": 186, "end": 2793}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/_version.py", "start": 2793, "end": 3120}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/axes.py", "start": 3120, "end": 9391}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/colorschemes.py", "start": 9391, "end": 12199}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/default_tooltip.py", "start": 12199, "end": 14493}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/figure.py", "start": 14493, "end": 23536}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/install.py", "start": 23536, "end": 25085}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/interacts.py", "start": 25085, "end": 47640}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/map_data/EuropeMap.json", "start": 47640, "end": 633010}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/map_data/USCountiesMap.json", "start": 633010, "end": 1523285}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/map_data/USStatesMap.json", "start": 1523285, "end": 1896950}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/map_data/WorldMap.json", "start": 1896950, "end": 2020492}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/market_map.py", "start": 2020492, "end": 2029940}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/marks.py", "start": 2029940, "end": 2105173}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/pyplot.py", "start": 2105173, "end": 2152652}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/scales.py", "start": 2152652, "end": 2171999}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/toolbar.py", "start": 2171999, "end": 2174758}, {"filename": "/tmp/xeus-python-kernel/envs/voici/lib/python3.10/site-packages/bqplot/traits.py", "start": 2174758, "end": 2184863}]});
  })();
